{"ast":null,"code":"var _jsxFileName = \"/Users/fengweizhan/Desktop/final-fullstack/src/Components/WeatherApp/WeatherApp.jsx\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react'\n// import './WeatherApp.css'\n// import search_icon from '../Assets/search.png'\n// import clear_icon from '../Assets/clear.png'\n// import rain_icon from '../Assets/rain.png'\n// import cloud_icon from '../Assets/cloud.png'\n// import drizzle_icon from '../Assets/drizzle.png'\n// import humidity_icon from '../Assets/humidity.png'\n// import snow_icon from '../Assets/snow.png'\n// import visibility_icon from '../Assets/visibility.png'\n// import wind_speed_icon from '../Assets/wind_speed.png'\n// import clear_columbia_icon from '../Assets/clear_columbia.png'\n// import rain_columbia_icon from '../Assets/rain_columbia.png'\n// import cloud_columbia_icon from '../Assets/cloud_columbia.png'\n// import snow_columbia_icon from '../Assets/snow_columbia.png'\n// import drizzle_columbia_icon from '../Assets/drizzle_columbia.png'\n// import suntset_icon from '../Assets/sunset_columbia.png'\n// import wind_icon from '../Assets/wind.png'\n\n// const WeatherApp = () => {\n\n//     let api_key =\"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     const[wicon,setWicon] = useState(cloud_icon);\n//     const search = async() => {\n//             const element = document.getElementsByClassName(\"cityInput\");\n//             if(element[0].value===\"\")\n//             {\n//                 return 0;\n//             }\n//             let url=`https://api.openweathermap.org/data/2.5/weather?q=${element[0].value}&units=Metric&appid=${api_key}`;\n//             let response = await  fetch(url);\n//             let data = await response.json();\n//             const humidity = document.getElementsByClassName(\"humidity-percent\");\n//             const wind = document.getElementsByClassName(\"wind-rate\");\n//             const temprature = document.getElementsByClassName(\"weather-temp\");\n//             const location = document.getElementsByClassName(\"weather-location\");\n\n//             humidity[0].innerHTML = data.main.humidity+\"%\";\n//             wind[0].innerHTML = Math.floor(data.wind.speed)+\"km/h\";\n//             temprature[0].innerHTML = Math.floor(data.main.temp)+\"°C\";\n//             location[0].innerHTML = data.name;\n\n//             if(data.weather[0].icon===\"01d\" ||data.weather[0].icon===\"01n\")\n//             {\n//                 setWicon(clear_icon);\n//             }\n//             else if(data.weather[0].icon===\"02d\" ||data.weather[0].icon===\"02n\")\n//             {\n//                 setWicon(cloud_icon)\n//             }\n//             else if(data.weather[0].icon===\"03d\" ||data.weather[0].icon===\"03n\")\n//             {\n//                 setWicon(drizzle_icon)\n//             }\n//             else if(data.weather[0].icon===\"04d\" ||data.weather[0].icon===\"04n\")\n//             {\n//                 setWicon(drizzle_icon)\n//             }\n//             else if(data.weather[0].icon===\"09d\" ||data.weather[0].icon===\"09n\")\n//             {\n//                 setWicon(rain_icon)\n//             }\n//             else if(data.weather[0].icon===\"10d\" ||data.weather[0].icon===\"10n\")\n//             {\n//                 setWicon(rain_icon)\n//             }\n//             else if(data.weather[0].icon===\"13d\" ||data.weather[0].icon===\"13n\")\n//             {\n//                 setWicon(snow_icon)\n//             }\n//             else\n//             {\n//                 setWicon(clear_icon);\n//             }\n//     }\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input type=\"text\" className=\"cityInput\" placeholder='Search' />\n//                 <div classname=\"search-icon\" onClick={()=>{search()}}>\n//                     <img src={search_icon} alt=\"\" />\n//                 </div>\n//             </div>\n//             <div className=\"weather-image\">\n//                 <img src={wicon} alt=\"\" />\n//             </div>\n//             <div className=\"weather-temp\">24°C</div>\n//             <div className=\"weather-location\">London</div>\n//             <div className=\"data-container\">\n//                 <div className=\"elements\">\n//                     <img src={humidity_icon} alt=\"\" className=\"icon\" />\n//                     <div className=\"data\">\n//                         <div className=\"Humidity-percent\">64%</div>\n//                         <div className=\"text\">Humidity</div>\n//                     </div>\n//                 </div>\n//                 <div className=\"elements\">\n//                     <img src={wind_speed_icon} alt=\"\" className=\"icon\" />\n//                     <div className=\"data\">\n//                         <div className=\"wind-rate\">18 km/h</div>\n//                         <div className=\"text\">Wind Speed</div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default WeatherApp\n\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('London'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (city) => {\n//         if (!city) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} bft</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp;\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n// import visbility_icon from '../Assets/visbility.png';\n// import sunset_icon from '../Assets/sunset.png';\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('London'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (selectedCity) => {\n//         if (!selectedCity) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name,\n//                 country: data.sys.country  // Extracting country from response\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}, {weatherData.country}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} km/h</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n// import visibility_icon from '../Assets/visibility.png'; // Ensure the name is correctly imported\n\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('New York'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (selectedCity) => {\n//         if (!selectedCity) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 visibility: data.visibility / 1000, // Convert to kilometers if needed\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name,\n//                 country: data.sys.country  // Extracting country from response\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}, {weatherData.country}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} BFT</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={visibility_icon} alt=\"Visibility\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.visibility} km</div>\n//                                 <div>Visibility</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp;\nimport React, { useState, useEffect } from 'react';\nimport './WeatherApp.css';\nimport search_icon from '../Assets/search.png';\nimport clear_icon from '../Assets/clear.png';\nimport rain_icon from '../Assets/rain.png';\nimport cloud_icon from '../Assets/cloud.png';\nimport drizzle_icon from '../Assets/drizzle.png';\nimport humidity_icon from '../Assets/humidity.png';\nimport snow_icon from '../Assets/snow.png';\nimport wind_speed_icon from '../Assets/wind_speed.png';\nimport broken_clouds_icon from '../Assets/broken_clouds.png';\nimport cloudy_icon from '../Assets/cloudy.png';\nimport storm_icon from '../Assets/storm.png';\nimport visibility_icon from '../Assets/visibility.png'; // Ensure this is the correct path to your visibility icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [city, setCity] = useState('London'); // Default city\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n  useEffect(() => {\n    fetchWeather(city); // Fetch weather for the default city on load\n  }, []); // Empty dependency array to run only once on mount\n\n  const fetchWeather = async selectedCity => {\n    if (!selectedCity) return;\n    setLoading(true);\n    setError('');\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data); // Log the full API response to inspect the visibility data\n      if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n      setWeatherData({\n        temp: Math.floor(data.main.temp),\n        humidity: data.main.humidity,\n        windSpeed: Math.floor(data.wind.speed),\n        visibility: data.visibility / 1000,\n        // Convert to kilometers if needed\n        icon: getWeatherIcon(data.weather[0].icon),\n        location: data.name,\n        country: data.sys.country\n      });\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getWeatherIcon = iconCode => {\n    switch (iconCode) {\n      case \"01d\":\n      case \"01n\":\n        return clear_icon;\n      case \"02d\":\n      case \"02n\":\n        return cloud_icon;\n      case \"03d\":\n      case \"03n\":\n        return cloudy_icon;\n      case \"04d\":\n      case \"04n\":\n        return broken_clouds_icon;\n      case \"09d\":\n      case \"09n\":\n        return drizzle_icon;\n      case \"10d\":\n      case \"10n\":\n        return rain_icon;\n      case \"11d\":\n      case \"11n\":\n        return storm_icon;\n      case \"13d\":\n      case \"13n\":\n        return snow_icon;\n      default:\n        return clear_icon;\n    }\n  };\n  const search = () => fetchWeather(city);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"cityInput\",\n        placeholder: \"Search\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-icon\",\n        onClick: search,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: search_icon,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 23\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherData.icon,\n          alt: \"Weather Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-temp\",\n        children: [weatherData.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-location\",\n        children: [weatherData.location, \", \", weatherData.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elements\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: humidity_icon,\n            alt: \"Humidity\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [weatherData.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elements\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: wind_speed_icon,\n            alt: \"Wind Speed\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [weatherData.windSpeed, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Wind Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elements\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: visibility_icon,\n            alt: \"Visibility\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [weatherData.visibility, \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 581,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherApp, \"74veqko0l3HW3sgyxJ9IVtRr98Q=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","search_icon","clear_icon","rain_icon","cloud_icon","drizzle_icon","humidity_icon","snow_icon","wind_speed_icon","broken_clouds_icon","cloudy_icon","storm_icon","visibility_icon","jsxDEV","_jsxDEV","WeatherApp","_s","city","setCity","loading","setLoading","error","setError","weatherData","setWeatherData","api_key","fetchWeather","selectedCity","url","response","fetch","data","json","console","log","ok","Error","message","temp","Math","floor","main","humidity","windSpeed","wind","speed","visibility","icon","getWeatherIcon","weather","location","name","country","sys","iconCode","search","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/fengweizhan/Desktop/final-fullstack/src/Components/WeatherApp/WeatherApp.jsx"],"sourcesContent":["// import React, {useState} from 'react'\n// import './WeatherApp.css'\n// import search_icon from '../Assets/search.png'\n// import clear_icon from '../Assets/clear.png'\n// import rain_icon from '../Assets/rain.png'\n// import cloud_icon from '../Assets/cloud.png'\n// import drizzle_icon from '../Assets/drizzle.png'\n// import humidity_icon from '../Assets/humidity.png'\n// import snow_icon from '../Assets/snow.png'\n// import visibility_icon from '../Assets/visibility.png'\n// import wind_speed_icon from '../Assets/wind_speed.png'\n// import clear_columbia_icon from '../Assets/clear_columbia.png'\n// import rain_columbia_icon from '../Assets/rain_columbia.png'\n// import cloud_columbia_icon from '../Assets/cloud_columbia.png'\n// import snow_columbia_icon from '../Assets/snow_columbia.png'\n// import drizzle_columbia_icon from '../Assets/drizzle_columbia.png'\n// import suntset_icon from '../Assets/sunset_columbia.png'\n// import wind_icon from '../Assets/wind.png'\n\n\n// const WeatherApp = () => {\n\n//     let api_key =\"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     const[wicon,setWicon] = useState(cloud_icon);\n//     const search = async() => {\n//             const element = document.getElementsByClassName(\"cityInput\");\n//             if(element[0].value===\"\")\n//             {\n//                 return 0;\n//             }\n//             let url=`https://api.openweathermap.org/data/2.5/weather?q=${element[0].value}&units=Metric&appid=${api_key}`;\n//             let response = await  fetch(url);\n//             let data = await response.json();\n//             const humidity = document.getElementsByClassName(\"humidity-percent\");\n//             const wind = document.getElementsByClassName(\"wind-rate\");\n//             const temprature = document.getElementsByClassName(\"weather-temp\");\n//             const location = document.getElementsByClassName(\"weather-location\");\n\n//             humidity[0].innerHTML = data.main.humidity+\"%\";\n//             wind[0].innerHTML = Math.floor(data.wind.speed)+\"km/h\";\n//             temprature[0].innerHTML = Math.floor(data.main.temp)+\"°C\";\n//             location[0].innerHTML = data.name;\n\n//             if(data.weather[0].icon===\"01d\" ||data.weather[0].icon===\"01n\")\n//             {\n//                 setWicon(clear_icon);\n//             }\n//             else if(data.weather[0].icon===\"02d\" ||data.weather[0].icon===\"02n\")\n//             {\n//                 setWicon(cloud_icon)\n//             }\n//             else if(data.weather[0].icon===\"03d\" ||data.weather[0].icon===\"03n\")\n//             {\n//                 setWicon(drizzle_icon)\n//             }\n//             else if(data.weather[0].icon===\"04d\" ||data.weather[0].icon===\"04n\")\n//             {\n//                 setWicon(drizzle_icon)\n//             }\n//             else if(data.weather[0].icon===\"09d\" ||data.weather[0].icon===\"09n\")\n//             {\n//                 setWicon(rain_icon)\n//             }\n//             else if(data.weather[0].icon===\"10d\" ||data.weather[0].icon===\"10n\")\n//             {\n//                 setWicon(rain_icon)\n//             }\n//             else if(data.weather[0].icon===\"13d\" ||data.weather[0].icon===\"13n\")\n//             {\n//                 setWicon(snow_icon)\n//             }\n//             else\n//             {\n//                 setWicon(clear_icon);\n//             }\n//     }\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input type=\"text\" className=\"cityInput\" placeholder='Search' />\n//                 <div classname=\"search-icon\" onClick={()=>{search()}}>\n//                     <img src={search_icon} alt=\"\" />\n//                 </div>\n//             </div>\n//             <div className=\"weather-image\">\n//                 <img src={wicon} alt=\"\" />\n//             </div>\n//             <div className=\"weather-temp\">24°C</div>\n//             <div className=\"weather-location\">London</div>\n//             <div className=\"data-container\">\n//                 <div className=\"elements\">\n//                     <img src={humidity_icon} alt=\"\" className=\"icon\" />\n//                     <div className=\"data\">\n//                         <div className=\"Humidity-percent\">64%</div>\n//                         <div className=\"text\">Humidity</div>\n//                     </div>\n//                 </div>\n//                 <div className=\"elements\">\n//                     <img src={wind_speed_icon} alt=\"\" className=\"icon\" />\n//                     <div className=\"data\">\n//                         <div className=\"wind-rate\">18 km/h</div>\n//                         <div className=\"text\">Wind Speed</div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n// export default WeatherApp\n\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('London'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (city) => {\n//         if (!city) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} bft</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp;\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n// import visbility_icon from '../Assets/visbility.png';\n// import sunset_icon from '../Assets/sunset.png';\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('London'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (selectedCity) => {\n//         if (!selectedCity) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name,\n//                 country: data.sys.country  // Extracting country from response\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}, {weatherData.country}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} km/h</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp\n// import React, { useState, useEffect } from 'react';\n// import './WeatherApp.css';\n// import search_icon from '../Assets/search.png';\n// import clear_icon from '../Assets/clear.png';\n// import rain_icon from '../Assets/rain.png';\n// import cloud_icon from '../Assets/cloud.png';\n// import drizzle_icon from '../Assets/drizzle.png';\n// import humidity_icon from '../Assets/humidity.png';\n// import snow_icon from '../Assets/snow.png';\n// import wind_speed_icon from '../Assets/wind_speed.png';\n// import broken_clouds_icon from '../Assets/broken_clouds.png';\n// import cloudy_icon from '../Assets/cloudy.png';\n// import storm_icon from '../Assets/storm.png';\n// import visibility_icon from '../Assets/visibility.png'; // Ensure the name is correctly imported\n\n// const WeatherApp = () => {\n//     const [city, setCity] = useState('New York'); // Default city\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [weatherData, setWeatherData] = useState(null);\n\n//     const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n//     useEffect(() => {\n//         fetchWeather(city); // Fetch weather for the default city on load\n//     }, []); // Empty dependency array to run only once on mount\n\n//     const fetchWeather = async (selectedCity) => {\n//         if (!selectedCity) return;\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n//             setWeatherData({\n//                 temp: Math.floor(data.main.temp),\n//                 humidity: data.main.humidity,\n//                 windSpeed: Math.floor(data.wind.speed),\n//                 visibility: data.visibility / 1000, // Convert to kilometers if needed\n//                 icon: getWeatherIcon(data.weather[0].icon),\n//                 location: data.name,\n//                 country: data.sys.country  // Extracting country from response\n//             });\n//         } catch (error) {\n//             setError(error.message);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const getWeatherIcon = (iconCode) => {\n//         switch(iconCode) {\n//             case \"01d\":\n//             case \"01n\":\n//                 return clear_icon;\n//             case \"02d\":\n//             case \"02n\":\n//                 return cloud_icon;\n//             case \"03d\":\n//             case \"03n\":\n//                 return cloudy_icon;\n//             case \"04d\":\n//             case \"04n\":\n//                 return broken_clouds_icon;\n//             case \"09d\":\n//             case \"09n\":\n//                 return drizzle_icon;\n//             case \"10d\":\n//             case \"10n\":\n//                 return rain_icon;\n//             case \"11d\":\n//             case \"11n\":\n//                 return storm_icon;\n//             case \"13d\":\n//             case \"13n\":\n//                 return snow_icon;\n//             default:\n//                 return clear_icon;\n//         }\n//     };\n\n//     const search = () => fetchWeather(city);\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"top-bar\">\n//                 <input \n//                     type=\"text\" \n//                     className=\"cityInput\" \n//                     placeholder='Search' \n//                     value={city}\n//                     onChange={(e) => setCity(e.target.value)}\n//                 />\n//                 <div className=\"search-icon\" onClick={search}>\n//                     <img src={search_icon} alt=\"Search\" />\n//                 </div>\n//             </div>\n//             {loading && <div>Loading...</div>}\n//             {error && <div className=\"error\">{error}</div>}\n//             {weatherData && (\n//                 <div>\n//                     <div className=\"weather-image\">\n//                         <img src={weatherData.icon} alt=\"Weather Icon\" />\n//                     </div>\n//                     <div className=\"weather-temp\">{weatherData.temp}°C</div>\n//                     <div className=\"weather-location\">{weatherData.location}, {weatherData.country}</div>\n//                     <div className=\"data-container\">\n//                         <div className=\"elements\">\n//                             <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.humidity}%</div>\n//                                 <div>Humidity</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.windSpeed} BFT</div>\n//                                 <div>Wind Speed</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"elements\">\n//                             <img src={visibility_icon} alt=\"Visibility\" className=\"icon\" />\n//                             <div className=\"data\">\n//                                 <div>{weatherData.visibility} km</div>\n//                                 <div>Visibility</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default WeatherApp;\nimport React, { useState, useEffect } from 'react';\nimport './WeatherApp.css';\nimport search_icon from '../Assets/search.png';\nimport clear_icon from '../Assets/clear.png';\nimport rain_icon from '../Assets/rain.png';\nimport cloud_icon from '../Assets/cloud.png';\nimport drizzle_icon from '../Assets/drizzle.png';\nimport humidity_icon from '../Assets/humidity.png';\nimport snow_icon from '../Assets/snow.png';\nimport wind_speed_icon from '../Assets/wind_speed.png';\nimport broken_clouds_icon from '../Assets/broken_clouds.png';\nimport cloudy_icon from '../Assets/cloudy.png';\nimport storm_icon from '../Assets/storm.png';\nimport visibility_icon from '../Assets/visibility.png'; // Ensure this is the correct path to your visibility icon\n\nconst WeatherApp = () => {\n    const [city, setCity] = useState('London'); // Default city\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [weatherData, setWeatherData] = useState(null);\n\n    const api_key = \"345b0a3851e93148bd0c9677cb8103c8\";\n\n    useEffect(() => {\n        fetchWeather(city); // Fetch weather for the default city on load\n    }, []); // Empty dependency array to run only once on mount\n\n    const fetchWeather = async (selectedCity) => {\n        if (!selectedCity) return;\n        setLoading(true);\n        setError('');\n        try {\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&units=Metric&appid=${api_key}`;\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(data);  // Log the full API response to inspect the visibility data\n            if (!response.ok) throw new Error(data.message || \"Unable to fetch weather.\");\n            setWeatherData({\n                temp: Math.floor(data.main.temp),\n                humidity: data.main.humidity,\n                windSpeed: Math.floor(data.wind.speed),\n                visibility: data.visibility / 1000, // Convert to kilometers if needed\n                icon: getWeatherIcon(data.weather[0].icon),\n                location: data.name,\n                country: data.sys.country\n            });\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const getWeatherIcon = (iconCode) => {\n        switch(iconCode) {\n            case \"01d\": case \"01n\": return clear_icon;\n            case \"02d\": case \"02n\": return cloud_icon;\n            case \"03d\": case \"03n\": return cloudy_icon;\n            case \"04d\": case \"04n\": return broken_clouds_icon;\n            case \"09d\": case \"09n\": return drizzle_icon;\n            case \"10d\": case \"10n\": return rain_icon;\n            case \"11d\": case \"11n\": return storm_icon;\n            case \"13d\": case \"13n\": return snow_icon;\n            default: return clear_icon;\n        }\n    };\n\n    const search = () => fetchWeather(city);\n\n    return (\n        <div className=\"container\">\n            <div className=\"top-bar\">\n                <input \n                    type=\"text\" \n                    className=\"cityInput\" \n                    placeholder='Search' \n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                />\n                <div className=\"search-icon\" onClick={search}>\n                    <img src={search_icon} alt=\"Search\" />\n                </div>\n            </div>\n            {loading && <div>Loading...</div>}\n            {error && <div className=\"error\">{error}</div>}\n            {weatherData && (\n                <div>\n                    <div className=\"weather-image\">\n                        <img src={weatherData.icon} alt=\"Weather Icon\" />\n                    </div>\n                    <div className=\"weather-temp\">{weatherData.temp}°C</div>\n                    <div className=\"weather-location\">{weatherData.location}, {weatherData.country}</div>\n                    <div className=\"data-container\">\n                        <div className=\"elements\">\n                            <img src={humidity_icon} alt=\"Humidity\" className=\"icon\" />\n                            <div className=\"data\">\n                                <div>{weatherData.humidity}%</div>\n                                <div>Humidity</div>\n                            </div>\n                        </div>\n                        <div className=\"elements\">\n                            <img src={wind_speed_icon} alt=\"Wind Speed\" className=\"icon\" />\n                            <div className=\"data\">\n                                <div>{weatherData.windSpeed} km/h</div>\n                                <div>Wind Speed</div>\n                            </div>\n                        </div>\n                        <div className=\"elements\">\n                            <img src={visibility_icon} alt=\"Visibility\" className=\"icon\" />\n                            <div className=\"data\">\n                                <div>{weatherData.visibility} km</div>\n                                <div>Visibility</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherApp;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}